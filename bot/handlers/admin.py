import os
from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.fsm.context import FSMContext
from bot.fsm.states import AddUserStates, AddPhotoStates, EditProfileStates
from bot.config import DOWNLOAD_DIR
from core.add_person import add_person_by_data
from core.add_photo_to_person import add_photo_to_person_by_username
from core.db import update_person, get_person_by_username_full, update_single_field

router = Router()

# ‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@router.message(F.text == "–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å")
async def start_add_user(message: Message, state: FSMContext):
    await state.set_state(AddUserStates.waiting_for_photo)
    await message.answer("üì∑ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")


@router.message(AddUserStates.waiting_for_photo, F.photo)
async def receive_user_photo(message: Message, state: FSMContext):
    file = message.photo[-1]
    file_path = os.path.join(DOWNLOAD_DIR, f"user_{message.from_user.id}.jpg")
    await file.download_to_destination(file_path)
    await state.update_data(photo_path=file_path)
    await state.set_state(AddUserStates.waiting_for_first_name)
    await message.answer("üìù –í–≤–µ–¥–∏—Ç–µ –∏–º—è:")


@router.message(AddUserStates.waiting_for_first_name)
async def get_first_name(message: Message, state: FSMContext):
    await state.update_data(first_name=message.text)
    await state.set_state(AddUserStates.waiting_for_last_name)
    await message.answer("üìù –í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é:")


@router.message(AddUserStates.waiting_for_last_name)
async def get_last_name(message: Message, state: FSMContext):
    await state.update_data(last_name=message.text)
    await state.set_state(AddUserStates.waiting_for_username)
    await message.answer("üë§ –í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω (username):")


@router.message(AddUserStates.waiting_for_username)
async def get_username(message: Message, state: FSMContext):
    await state.update_data(username=message.text)
    await state.set_state(AddUserStates.waiting_for_phone)
    await message.answer("üìû –í–≤–µ–¥–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω:")


@router.message(AddUserStates.waiting_for_phone)
async def get_phone(message: Message, state: FSMContext):
    await state.update_data(phone=message.text)
    await state.set_state(AddUserStates.waiting_for_telegram)
    await message.answer("üí¨ –í–≤–µ–¥–∏—Ç–µ Telegram (–±–µ–∑ @):")


@router.message(AddUserStates.waiting_for_telegram)
async def get_telegram(message: Message, state: FSMContext):
    await state.update_data(telegram=message.text)
    await state.set_state(AddUserStates.waiting_for_whatsapp)
    await message.answer("üíö –í–≤–µ–¥–∏—Ç–µ WhatsApp (—Ç–æ–ª—å–∫–æ –Ω–æ–º–µ—Ä):")


@router.message(AddUserStates.waiting_for_whatsapp)
async def finish_add_user(message: Message, state: FSMContext):
    data = await state.get_data()
    photo_path = data.get("photo_path")

    try:
        result = add_person_by_data(
            image_path=photo_path,
            first_name=data["first_name"],
            last_name=data["last_name"],
            username=data["username"],
            phone=data["phone"],
            telegram=data["telegram"],
            whatsapp=message.text
        )
        await message.answer(result)
        if os.path.exists(photo_path):
            os.remove(photo_path)
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏: {e}")

    await state.clear()


# ‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
@router.message(F.text == "–î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ –∫ –ø—Ä–æ—Ñ–∏–ª—é")
async def start_add_photo(message: Message, state: FSMContext):
    await state.set_state(AddPhotoStates.waiting_for_username)
    await message.answer("üë§ –í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫ –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ:")


@router.message(AddPhotoStates.waiting_for_username)
async def get_username_to_add_photo(message: Message, state: FSMContext):
    await state.update_data(username=message.text)
    await state.set_state(AddPhotoStates.waiting_for_photo)
    await message.answer("üì∑ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ:")


@router.message(AddPhotoStates.waiting_for_photo, F.photo)
async def add_photo(message: Message, state: FSMContext):
    data = await state.get_data()
    file = message.photo[-1]
    file_path = os.path.join(DOWNLOAD_DIR, f"extra_{message.from_user.id}.jpg")
    await file.download_to_destination(file_path)

    try:
        add_photo_to_person_by_username(data["username"], file_path)
        await message.answer("‚úÖ –§–æ—Ç–æ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ!")
        if os.path.exists(file_path):
            os.remove(file_path)
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ñ–æ—Ç–æ: {e}")

    await state.clear()


# ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
@router.message(F.text == "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å")
async def start_edit_profile(message: Message, state: FSMContext):
    await state.set_state(EditProfileStates.waiting_for_username)
    await message.answer("üë§ –í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å:")


edit_field_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–ò–º—è"), KeyboardButton(text="–§–∞–º–∏–ª–∏—è")],
        [KeyboardButton(text="–¢–µ–ª–µ—Ñ–æ–Ω"), KeyboardButton(text="Telegram")],
        [KeyboardButton(text="WhatsApp"), KeyboardButton(text="–ù–∞–∑–∞–¥")]
    ],
    resize_keyboard=True
)

@router.message(EditProfileStates.waiting_for_username)
async def choose_field_to_edit(message: Message, state: FSMContext):
    username = message.text
    person = get_person_by_username_full(username)
    if not person:
        await message.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        await state.clear()
        return

    await state.update_data(username=username)
    await message.answer(
        f"üë§ –¢–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ:\n"
        f"–ò–º—è: {person[1]}\n"
        f"–§–∞–º–∏–ª–∏—è: {person[2]}\n"
        f"–¢–µ–ª–µ—Ñ–æ–Ω: {person[4]}\n"
        f"Telegram: {person[5]}\n"
        f"WhatsApp: {person[6]}\n\n"
        f"–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª–µ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è:",
        reply_markup=edit_field_kb
    )
    await state.set_state(EditProfileStates.choosing_field)


@router.message(EditProfileStates.choosing_field)
async def select_field(message: Message, state: FSMContext):
    fields = {
        "–ò–º—è": "first_name",
        "–§–∞–º–∏–ª–∏—è": "last_name",
        "–¢–µ–ª–µ—Ñ–æ–Ω": "phone",
        "Telegram": "telegram",
        "WhatsApp": "whatsapp"
    }
    field = fields.get(message.text.strip())
    if not field:
        await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –ø–æ–ª–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        return
    await state.update_data(field_to_edit=field)
    await state.set_state(EditProfileStates.waiting_for_new_value)
    await message.answer("‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:")


@router.message(EditProfileStates.waiting_for_new_value)
async def save_new_value(message: Message, state: FSMContext):
    data = await state.get_data()
    username = data["username"]
    field = data["field_to_edit"]
    value = message.text.strip()

    try:
        update_single_field(username=username, field=field, value=value)
        await message.answer("‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!")
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏: {e}")

    await state.clear()